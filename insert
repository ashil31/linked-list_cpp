//Here insertion in linkedlist by Using Structure...

struct node{
   int data;
   struct node* next;
};

struct node* head =NULL;

void insertAtBeg(int data){
   node * newnode = (node*)malloc(sizeof(node));
   newnode->data=data;
   newnode->next=head;
   head=newnode;
}

void insertAtEnd(int data){
   node * newnode= (node*)malloc(sizeof(node));
   newnode->data=data;
   newnode->next=NULL;
   node * temp=head;
   if(temp==NULL){
      head=newnode;
      return;
   }
   while(temp->next!=NULL){
      temp=temp->next;
   }
   temp->next=newnode;
}

void insertAtMiddle(int data,int pos){
   node *newnode = (node*)malloc(sizeof(node));
   newnode->data=data;
   newnode->next=NULL;
   node *temp=head;
   if(temp==NULL){
      head=newnode;
      return;
   }
   int count=1;
   while(count<pos && temp->next!=NULL){
      count++;
      temp=temp->next;
   }
   if(temp->next==NULL){
      temp->next=newnode;
      return;
   }
   newnode->next=temp->next;
   temp->next=newnode;
}

void printlist(){
   node* temp;
   temp= head;
   while(temp!=NULL){
      cout<<temp->data<<" ";
      temp=temp->next;
   }
}

int main(){
   int n;
   cin>>n;
   int data;
   for(int i=0;i<n;i++){
      cin>>data;
      insertAtBeg(data);
   }
   cout<<"Insert At Beginning :- ";
   printlist();
   cout<<endl;
   head = NULL;

   for(int i=0;i<n;i++){
      cin>>data;
      insertAtEnd(data);
   }
   cout<<"Insert At End :- ";
   printlist();
   cout<<endl;

   int pos;
   cin>>pos;
   cin>>data;
   insertAtMiddle(data,pos);
   cout<<"Insert At Middle :- ";
   printlist();
   cout<<endl;
   head=NULL;
   return 0;
}

//Using class...

class node{
    public:
        int data;
        node * next;
        node(int data){
            this->data=data;
            this->next=nullptr;
        }
};

class sll{
    public:
        node * head;
        sll(){
            this->head=nullptr;
        }
        void insertAtBeg(int data){
            node *newnode= new node(data);
            if(head==nullptr){
                head=newnode;
            }else{
                newnode->next=head;
                head=newnode;
            }            
        }

        void insertAtEnd(int data){
            node * newnode= new node(data);
            node * temp= head;
            if(temp==nullptr){
                head=newnode;
            }else{
                while(temp->next!=nullptr){
                    temp=temp->next;
                }
                temp->next=newnode;
            }
        }

        void insertAtMiddle(int data,int pos){
            node *newnode= new node(data);
            node *temp= head;
            if(head==nullptr){
                head=newnode;
            }else{
                int count =1;
                while(count<pos && temp->next!=nullptr){
                    count++;
                    temp= temp->next;
                }
                newnode->next=temp->next;
                temp->next=newnode;
            }
        }
};

void display(node *head){
    node * temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp= temp->next;
    }
    cout<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        sll *list=new sll();
        for(int i=0;i<n;i++){
            int data;
            cin>>data;
            list->insertAtBeg(data);
        }
        cout<<"Here is Insert at Beginning :- ";
        display(list->head);

        sll *slist= new sll();
        for(int i=0;i<n;i++){
            int data;
            cin>>data;
            slist->insertAtEnd(data);
        }
        cout<<"Here is Insert at End :- ";
        display(slist->head);
        int pos;
        cin>>pos;
        int data;
        cin>>data;
        cout<<"Here is Insert at middle :- ";
        slist->insertAtMiddle(data,pos);
        display(slist->head);
    }
}
